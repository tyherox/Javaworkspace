import java.util.ArrayList;


public class Computer {

	static ArrayList<JBoardT> temp = new ArrayList<JBoardT>();
	static ArrayList<JBoardT> cBoard = new ArrayList<JBoardT>();
	static ArrayList<JBoardT> pBoard = new ArrayList<JBoardT>();
	static int score = 0;
	static int ts = 0;
	static JBoardT place;
	
	public static void updateAi(JBoardT a)
	{
		pBoard.add(a);
	}
	
	public void clear()
	{
		temp.clear();
		cBoard.clear();
	}
	public void startMove(ArrayList<JBoardT> board){
		
		System.out.println("at ai: " + cBoard.size());
		temp = board;
		for(int i = 0; i<temp.size();i++)
		{
			JBoardT t = temp.get(i);
			cBoard.add(t);
			System.out.println("at ai process: " + i);
			if(cBoard.size()>=3)
			{
				if(MainFrame.victory(cBoard)==true)
				{
					place = t;
					break;
				}
			}
			else
			{
				ts = miniMax();
				System.out.println(ts);
				if(score<ts){
					score = ts;
					place = t;
				}
			}
			cBoard.remove(t);
		}
		
		Board.updateBoard(place);
		cBoard.add(place);
	}
	
	////// miniMax/////
	
	static int depth = 0;
	boolean aiTurn = false;
	static int goal = 10000000;
	int s = 0;
	int z = 0;
	
	private int miniMax(){
		
		System.out.println("at minimax");
		depth++;
		
		if(aiTurn==true)
		{
			for(int i = 0; i<temp.size();i++)
			{
				JBoardT t = temp.get(i);
				temp.remove(i);
				cBoard.add(t);
				System.out.println("at minimax processing: ai");
				if(cBoard.size()>=3)
				{
					if(MainFrame.victory(cBoard)==true)
					{
						System.out.println("at minimax processing: ai win");
						temp.add(t);
						cBoard.remove(t);
						return goal - depth;
					}
					else
					{
						System.out.println("at minimax processing: ai no win");
						aiTurn=!aiTurn;
						z = miniMax();
						depth--;
						if(z>s)
						{
							s=z;
						}
						temp.add(t);
						cBoard.remove(t);
					}
				}
				
				temp.add(t);
				cBoard.remove(t);
			}
		}
		
		if(aiTurn==false)
		{
			for(int i = 0; i<temp.size();i++)
			{
				JBoardT t = temp.get(i);
				temp.remove(i);
				pBoard.add(t);
				System.out.println("at minimax processing: player");
				if(pBoard.size()>=3)
				{
					if(MainFrame.victory(pBoard)==true)
					{
						System.out.println("at minimax processing: player win");
						temp.add(t);
						pBoard.remove(t);
						return -goal + depth;
					}
					else
					{
						System.out.println("at minimax processing: player no win");
						aiTurn=!aiTurn;
						z = miniMax();
						depth--;
						if(z<s)
						{
							s=z;
						}
						temp.add(t);
						pBoard.remove(t);
					}
				}
				
				temp.add(t);
				pBoard.remove(t);
			}
		}
		
		depth--;
		return s;
	}
	
	/////////
	
	private int[] coordinate(){
		return null;
	}
}
