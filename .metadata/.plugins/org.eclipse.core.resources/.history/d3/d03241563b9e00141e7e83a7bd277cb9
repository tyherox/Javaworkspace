import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.RowSpec;
import com.jgoodies.forms.factories.FormFactory;

import javax.swing.JButton;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;


public class Board<booelan> extends JFrame {

	private JPanel contentPane;

	/// booleans 
	String test;
	boolean t1 = true,t2 = true,t3 = true,t4 = true,t5 = true,t6 = true,t7 = true,t8 = true,t9 = true;
	ArrayList<Boolean> board = new ArrayList<Boolean>();
	//board.add(test);
	AI ai = new AI();
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Board frame = new Board();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * 
	 * Create the frame.
	 */
	public Board() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 500, 600);
		contentPane = new JPanel();
		contentPane.setBackground(Color.LIGHT_GRAY);
		contentPane.setBorder(null);
		setContentPane(contentPane);
		contentPane.setLayout(new FormLayout(new ColumnSpec[] {
				FormFactory.RELATED_GAP_COLSPEC,
				ColumnSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_COLSPEC,
				ColumnSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_COLSPEC,
				ColumnSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_COLSPEC,},
			new RowSpec[] {
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("50dlu"),}));
		
		final JPanel p1 = new JPanel();
		p1.setBackground(Color.white);
		p1.addMouseListener(new MouseAdapter() {
			
			@Override
			public void mouseEntered(MouseEvent arg0) {
				if(t1==true)
				{
					p1.setBackground(Color.GRAY);
				}
			}
			@Override
			public void mouseExited(MouseEvent e) {
				if(t1==true)
				{
					p1.setBackground(Color.white);
				}
			}
			@Override
			public void mouseClicked(MouseEvent e) {
				if(t1==true)
				{
					p1.setBackground(Color.BLUE);
				}
				t1=false;
			}
			
		});
		contentPane.add(p1, "2, 2, fill, fill");
		
		final JPanel p2 = new JPanel();
		p2.setBackground(Color.white);
		p2.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent arg0) {
				p2.setBackground(Color.GRAY);
			}
			@Override
			public void mouseExited(MouseEvent e) {
				p2.setBackground(Color.white);
			}
		});
		contentPane.add(p2, "4, 2, fill, fill");
		
		final JPanel p3 = new JPanel();
		p3.setBackground(Color.white);
		p3.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent arg0) {
				p3.setBackground(Color.GRAY);
			}
			@Override
			public void mouseExited(MouseEvent e) {
				p3.setBackground(Color.white);
			}
		});
		contentPane.add(p3, "6, 2, fill, fill");
		
		final JPanel p4 = new JPanel();
		p4.setBackground(Color.white);
		p4.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent arg0) {
				p4.setBackground(Color.GRAY);
			}
			@Override
			public void mouseExited(MouseEvent e) {
				p4.setBackground(Color.white);
			}
		});
		contentPane.add(p4, "2, 4, fill, fill");
		
		final JPanel p5 = new JPanel();
		p5.setBackground(Color.white);
		p5.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent arg0) {
				p5.setBackground(Color.GRAY);
			}
			@Override
			public void mouseExited(MouseEvent e) {
				p5.setBackground(Color.white);
			}
		});
		contentPane.add(p5, "4, 4, fill, fill");
		
		final JPanel p6 = new JPanel();
		p6.setBackground(Color.white);
		p6.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent arg0) {
				p6.setBackground(Color.GRAY);
			}
			@Override
			public void mouseExited(MouseEvent e) {
				p6.setBackground(Color.white);
			}
		});
		contentPane.add(p6, "6, 4, fill, fill");
		
		final JPanel p7 = new JPanel();
		p7.setBackground(Color.white);
		p7.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent arg0) {
				p7.setBackground(Color.GRAY);
			}
			@Override
			public void mouseExited(MouseEvent e) {
				p7.setBackground(Color.white);
			}
		});
		contentPane.add(p7, "2, 6, fill, fill");
		
		final JPanel p8 = new JPanel();
		p8.setBackground(Color.white);
		p8.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent arg0) {
				p8.setBackground(Color.GRAY);
			}
			@Override
			public void mouseExited(MouseEvent e) {
				p8.setBackground(Color.white);
			}
		});
		contentPane.add(p8, "4, 6, fill, fill");
		
		final JPanel p9 = new JPanel();
		p9.setBackground(Color.white);
		p9.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent arg0) {
				p9.setBackground(Color.GRAY);
			}
			@Override
			public void mouseExited(MouseEvent e) {
				p9.setBackground(Color.white);
			}
		});
		contentPane.add(p9, "6, 6, fill, fill");
		
		JPanel panel = new JPanel();
		panel.setBackground(Color.GRAY);
		contentPane.add(panel, "1, 8, 7, 1, fill, fill");
	}

	private void aiMove()
	{
		
	}
	
	private class AI
	{
		
	}
}
