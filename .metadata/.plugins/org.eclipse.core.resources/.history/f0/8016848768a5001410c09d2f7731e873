package Main;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

public class guic extends JFrame {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					guic frame = new guic();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public guic() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 600, 600);
		contentPane = new JPanel();
		contentPane.setBackground(Color.WHITE);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new BorderLayout(0, 0));
		
		JPanel writePanel = new JPanel();
		writePanel.setBackground(Color.WHITE);
		writePanel.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent e) {
				System.out.println(e.getKeyCode());
				if(e.getKeyCode()==27)
				{
					System.exit(0);
				}
			}
		});
		writePanel.setFocusable(true);
		contentPane.add(writePanel, BorderLayout.CENTER);
		
		Rectangle r = getBounds();
	
		JPanel nBorder = new JPanel();
		nBorder.setPreferredSize(new Dimension(r.width/4,r.height/4));
		contentPane.add(nBorder, BorderLayout.NORTH);
		
		JPanel sBorder = new JPanel();
		sBorder.setPreferredSize(new Dimension(r.width/4,r.height/4));
		contentPane.add(sBorder, BorderLayout.SOUTH);
		
		JPanel wBorder = new JPanel();
		wBorder.setPreferredSize(new Dimension(r.width/2,r.height/2));
		contentPane.add(wBorder, BorderLayout.WEST);
		
		JPanel eBorder = new JPanel();
		eBorder.setPreferredSize(new Dimension(r.width/2,r.height/2));
		contentPane.add(eBorder, BorderLayout.EAST);
		
		
		//// full screen mode code ////
    	GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
    	
    	if (gd.isFullScreenSupported()) {
            setUndecorated(true);
            gd.setFullScreenWindow(this);
        } else {
            System.err.println("Full screen not supported");
            setSize(100, 100); // just something to let you see the window
            setVisible(true);
        }
		
		
	}

}
