package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.metal.MetalLookAndFeel;
import javax.swing.table.DefaultTableModel;

import java.awt.Color;

import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;

import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.factories.FormFactory;
import com.jgoodies.forms.layout.RowSpec;

import javax.swing.JButton;

import java.awt.Font;
import java.awt.GridBagLayout;

public class manager extends JFrame {

	private JPanel contentPane;
	static JTable test;
	static DefaultTableModel tester;
	static JScrollPane holder; 

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					manager frame = new manager();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public manager() {
		
		try {
            UIManager.setLookAndFeel(new MetalLookAndFeel());
        } catch (Exception e) {
            System.out.println("error");
        }
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 253, 470);
		contentPane = new JPanel();
		contentPane.setBackground(Color.LIGHT_GRAY);
		contentPane.setBorder(new EmptyBorder(0, 10, 0, 0));
		setContentPane(contentPane);
		
		holder = new JScrollPane();
		tester = new DefaultTableModel(){public boolean isCellEditable(int rowIndex, int mColIndex){return false;}};
		test = new JTable(tester);
		holder.setViewportView(test);
		tester.setRowCount(10);
		
		tester.addColumn("Name");
		tester.addColumn("Date");
		
		tester.setValueAt("test 1",0,0);
		tester.setValueAt("test 2",0,1);
		
		contentPane.add(holder);
	}
	
	public class CustomRenderer extends DefaultListCellRenderer
	{
		public Component getListCellRendererComponent(JList list, Object value,
			    int index, boolean isSelected, boolean cellHasFocus) {
				setText(value.toString());
				setForeground(Color.BLACK);
				setOpaque(false);
				if(isSelected) {
					setBackground(Color.blue);
					setOpaque(true);
				}
			    return this;
			  }
	}
}
